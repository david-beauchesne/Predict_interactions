Parameters:
  Kc                    Integer, how many consumer neighbors to select
  Kr                    Integer, how many resource neighbors to select
  S0                    Interction catalogue w/ 'taxa', 'taxonomy', 'resource set', 'non-resource set', 'consumer set', 'non-consumer set'
  S1                    Set of taxa for which we wish to predict pairwise interactions
  MW                    Mimimum weight to accept a candidate as a prey
  Minimum_threshold     Minimum similarity threshold used to accept candidate species. Arbitrary at this point.

Output
  A matrix 'predictions' with columns
    1. S1 taxa
    2. empirical resource of S1 taxa
    3. predicted resources of S1 taxa

------------

predictions <- empty vector


for consumers in S1
    candidate_list <- empty vector

    # 1. Empirical information in catalogue
    resources_S1 = set of resources found in S0
    empirical_resource <- empty vector

    if length(resources_S1) > 0:
        for resources in resources_S1
            if resources in S1:
                add resources to empirical_resource
            else:
                similar_resource <- pick K most similar resources in S1 based on taxonomy and set of consumers
                    if similarity K + 1 = similarity K:
                        random sample of similar resources with similarity K

                for resources' in similar_resource
                    if all K similarity = 0:
                        break out of loop
                    else if resources' similarity = 0:
                        NULL
                    else if resources' similarity < minimum similarity threshold:
                        NULL
                    else if resources' in candidate_list:
                        add weight = similarity between resources and resources' to resources' in candidate_list
                    else: (not in candidate_list)
                        add resources' to candidate_list w/ weight = similarity between resources and resources'

        add empirical_resource to predictions matrix

    # 2. Similar consumers information
    similar_consumers <- pick K most similar consumers in S0 based on taxonomy and set of resources
        if similarity K + 1 = similarity K:
            random sample of similar consumers with similarity K

    for consumers' in similar_consumers
        if all K similarity = 0:
            break out of loop
        else if consumers' similarity = 0:
            NULL

        candidate_resources = resources' of consumers' in S0

        for resources' in candidate_resources
            if length(candidate_resources) == 0:
                break out of loop
            else if candidate_resources == "":
                break out of loop
            else if resources' = consumers: (does not allow for cannibalism. Should verify this at some point and allow for it, there are multiple instances of cannibalism in food webs)
                break out of loop
            else if resources' in S1:
                if resources' in candidate_list:
                    add weight = 1 to resources' in candidate_list
                else:
                    add resources' w/ weight = 1 to candidate_list

            else: (resources' not in S1)
                similar_resource <- pick K most similar resources in S1 based on taxonomy and set of consumers
                    if similarity K + 1 = similarity K:
                        random sample of similar resources with similarity K

                for resources' in similar_resource
                    if all K similarity = 0:
                        break out of loop
                    else if resources' similarity = 0:
                        NULL
                    else if resources' similarity < minimum similarity threshold:
                        NULL
                    else if resources' in candidate_list:
                        add weight = similarity between resources' and candidate_resources to resources' in candidate_list
                    else: (not in candidate_list)
                        add resources' to candidate_list w/ weight = similarity between resources' and candidate_resources

    candidate_list <- choose candidate resources with weight >= MW
    predictions <- add candidate_list to predictions

return(predictions matrix)
